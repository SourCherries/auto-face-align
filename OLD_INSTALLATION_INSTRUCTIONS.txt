An overview of the instructions

A. Ensure that you have the proper C compiler
B. Download latest facepackage-slim from GitHub
C. Create a virtual environment
    - this is important
    - i mention this because skipping this appears to cause problems for some
D. The actual installation
E. Give me some info please
F. Thank you! You're awesome!

# --------------------------------------------------------------------
# Getting the proper C compiler for your system

# OPTION FOR WINDOWS -------------------------------------------------
You need to install Microsoft Visual Studio.
This is important. You may already have a C compiler but my package
requires a specific C compiler that only Visual Studio has.
My package depends on another package DLIB, which uses PYBIND11 to
enable Python to use C++ code and this type of configuration can only
compile with Visual Studio installed :(
But it is free ... and you only need install the "Workload" with C++
stuff for desktop development :)

# OPTION FOR MACOS ---------------------------------------------------
You need to install Xcode Command Line Tools.

>> gcc --version
If this command returns a version then you already have what you need :)

1. What's your version of macOS?
2. Find the max Xcode version compatible with your os version:
    - See the Version history table: https://en.wikipedia.org/wiki/Xcode
3. Get the right version of Xcode Command Line Tools:
    - https://developer.apple.com/downloads/index.action

>> gcc --version
Should now return the version number if it's installed.

# OPTION FOR LINUX ---------------------------------------------------
I don't think you have to do anything. You can probably skip this.


# --------------------------------------------------------------------
# Setting up the files on your computer

# Unzip facepackage-slim-main.zip to your PC (skip if you forked from GitHub)

# Main folder will be facepackage-slim-main

# Go to the main folder
>> cd facepackage-slim-main

# --------------------------------------------------------------------
# Create a new virtual environment called myenv

# OPTION WITHOUT ANACONDA or MINICONDA -------------------------------

    # ***************************************************************
    # optional step.
    # set the python version for this folder and its subdirectories :)
    # 1. Install pyenv using your system's package manager.
    #    On macOS, I recommend Homebrew
    #    >> brew install pyenv
    #    I'm not familiar with linux package management
    #
    # get list of available python versions
    >> pyenv install --list

    # install python 3.9.0, 3.9.1 or 3.9.2
    # this just puts it on your system
    >> pyenv install 3.9.2

    # see all versions available on your system
    # the one with an asterisk is what's being used now
    >> pyenv versions

    # set the python version for facepackage-slim-main!
    >> pyenv local 3.9.2
    # ***************************************************************

    # create virtual environment using built-in VENV module.
    # this will create a myenv folder locally.
    # you can have many such folders.
    >> python -m venv myenv

    # activate myenv (on Windows)
    >> myenv\Scripts\activate.bat

    # activate myenv (on Linux or macOS)
    >> source myenv/bin/activate

# OPTION WITH ANACONDA or MINICONDA ----------------------------------
    # create virtual environment along with Python version
    >> conda create --name myenv python=3.9.2

    # activate myenv
    >> conda activate myenv

# --------------------------------------------------------------------
# The actual installation

# see if you need to update pip
>> pip list
# if you need to update, copy and paste the entire command to terminal
# likely unnecessary if you're using Anaconda

# install some stuff
>> pip install pytest
>> pip install cmake

# go to a subdirectory of facepackage-slim-main called alignfaces2
>> cd alignfaces2

# install required external packages
>> pip install -r requirements.txt

# install my face toolbox!
>> python setup.py install

# test demo 1
>> cd ..
>> cd demos/demo_1_alignment
>> python run_demo.py

# test demo 2
>> cd ..
>> cd demo_2_averaging
>> python run_demo.py

# test demo 3
>> cd ..
>> cd demo_3_morphing
>> python run_demo.py

# --------------------------------------------------------------------
# Feedback

What is your exact operating system?
    Examples:
    Windows 10 version 21H1
    macOS 10.12.6 (High Sierra)
    Ubuntu 21.04 (Hirsute Hippo)

Python version?
    Examples:
    Python 3.9.2
    Python 3.6.8

Are you using Anaconda?

Did the command "pip install -r requirements.txt" work?
    If not, can you email me the error message?
    If it did work, what are installed versions of the following packages?
        cmake
        dlib
        scikit-image
        numpy
        scipy
    On linux and macOS you can:
        (no anaconda) >> pip list | grep cmake
        (anaconda)    >> conda list | grep cmake

Did the command "python setup.py install" work?
    If not, can you email me the error message?

For each demo, did the demo work?
    If not, can you email me the error message?
